Question Number,Question Text,Choices,Valid Question?,Correct Answer,LLM Answer,Correct Explanation,LLM Explanation,URLs,Correct?,Topic,LLM Confidence,logprob Confidence
106,Which of the following are true about configuration verification? Select all that apply.,"a. Configuration verification can only detect errors after the configuration is installed on production routers.
b. Configuration verification cannot detect incorrect protocol behavior that may result from faulty hardware.
c. Verifying the correctness of network behavior based on configuration requires a model of protocol behavior.
d. Configuration verification requires a large-scale simulation of network protocols, complete with tests for different message orderings and timings.
e. Configuration verification cannot detect incorrect protocol behavior that may result from buggy software.
",,"b,c,e","b,c",,"Configuration verification is the process of ensuring that a network configuration will behave as intended before it is deployed. It includes checking for errors, ensuring compliance with policies, and predicting network behavior under the given configuration. Option b is correct because configuration verification typically involves checking the configuration files and settings against a model or set of rules, rather than detecting hardware faults that may cause incorrect protocol behavior. Option c is also correct as verifying the correctness of network behavior based on configuration does indeed require a model of protocol behavior to predict how the network will operate under the given configuration. Option a is incorrect because configuration verification can also be performed before the configuration is deployed to production routers. Option d is not necessarily true, as configuration verification can be done using a variety of methods, not all of which require large-scale simulations. Option e is incorrect because configuration verification can potentially detect some types of incorrect protocol behavior that may result from buggy software, especially if the bugs are related to the configuration settings themselves.","['https://www.cisco.com/c/en/us/support/docs/cloud-systems-management/network-services-orchestrator/213473-understand-and-troubleshoot-configuration.html', 'https://ieeexplore.ieee.org/document/6601506']",0,14_verification,0.95,0.9972858779799544
107,"Which of the following assertions could be verified with configuration verification (i.e., of a snapshot of router and switch configuration)? Select all that apply.","a. A route learned from one peer will not be readvertised to another peer.
b. The current settings of link weights will result in all routers being connected.
c. The configuration of route reflectors and clients ensures that any route learned from a neighboring AS will propagate to all routers in the topology.
d. There is no traffic pattern that would ever result in a stateful firewall dropping traffic.
e. Any time that an infection occurs, hosts are automatically quarantined.
",,"a,b,c","a,c",,"Configuration verification involves examining the static configuration files of network devices to ensure that they are correctly set up to meet certain policies or requirements. Option (a) can be verified through configuration verification by examining routing policies and filters set up on routers to prevent route readvertisement. Option (c) can also be verified by checking the configuration of route reflectors and clients to ensure proper route propagation rules are in place. Option (b) is not verifiable solely through configuration as it requires knowledge of the network's operational state and possibly running a connectivity algorithm. Option (d) cannot be verified by configuration alone because it involves dynamic stateful inspection of traffic, which depends on the actual traffic flows and the state of the firewall. Option (e) involves the dynamic response of a system to an event (an infection), which also cannot be confirmed by just looking at static configurations.","['https://www.cisco.com/c/en/us/support/docs/ip/border-gateway-protocol-bgp/13751-23.html', 'https://www.juniper.net/documentation/en_US/junos/topics/topic-map/bgp-route-reflection.html', 'https://www.ietf.org/rfc/rfc1771.txt']",0,14_verification,0.95,0.9019721751394679
108,Which of the following are true about data-plane verification? Select all that apply.,"a. Data-plane verification techniques such as header-space analysis typically operate on a single ""snapshot"" of data-plane state.
b. Data plane verification can only operate on the forwarding table of a single router or switch; network-wide analysis is not possible.
c. Data-plane verification may detect errors that configuration analysis can miss in the cases of buggy control-plane software.
d. Data-plane verification requires accurate modeling of network protocols, including which bits are present in which part of the packet header.
e. Header-space analysis can only provide verification/analysis for specific packets; it cannot answer questions for general parts of flowspace.
",,"a,c","a,c,d",,"Data-plane verification techniques, such as header-space analysis, operate on a snapshot of the network's data-plane state. This allows them to verify the behavior of the network at a specific point in time (a). It is not limited to a single router or switch; network-wide analysis is indeed possible, which makes choice (b) incorrect. Data-plane verification can uncover errors that might be missed by configuration analysis, especially if there are bugs in the control-plane software that affect the data-plane state (c). Accurate modeling of network protocols is essential for data-plane verification because it relies on understanding how packets are processed and forwarded based on their headers (d). Header-space analysis is not limited to specific packets; it can analyze the behavior of the network for general sets of packets defined by headers, which means (e) is incorrect.","['https://www.usenix.org/system/files/conference/nsdi12/nsdi12-final138.pdf', 'https://www.cs.princeton.edu/~msharifm/papers/hsa-nsdi12.pdf']",0,14_verification,0.95,0.9999853532373147
109,Which of the following assertions could be verified with data plane verification? Select all that apply.,"a. The network will remain connected, given the failure of at most two links.
b. Two virtual network ""slices"" are not completely isolated: it is possible for traffic to travel from one slice to the other.
c. The configuration of the network's routing protocols will result in persistent oscillation (i.e., they will never settle on a stable set of routes).
d. The forwarding table state in the routers across the network will result in a forwarding loop.
e. The rules installed on the firewalls in the network ensure that only port 80 traffic can ever reach the web server from the rest of the Internet.
",,"b,d,e","b,d,e",,"Data plane verification is concerned with the current state of the network, including forwarding tables, firewall rules, and potential traffic flows. Therefore, it can be used to verify the following assertions: 

- (b) Whether two virtual network slices are isolated can be verified by examining the forwarding rules and potential traffic paths to determine if traffic can indeed travel from one slice to the other. 
- (d) The presence of a forwarding loop can be determined by analyzing the forwarding tables in routers to see if packets are being sent in a loop between routers. 
- (e) Firewall rules, such as those that restrict traffic to only port 80, can be verified by inspecting the actual rules installed on the firewalls to ensure they match the intended policy. 

On the other hand: 

- (a) Determining the network's resilience to link failures typically involves control plane considerations and is not solely based on the current data plane state. 
- (c) Persistent oscillation in routing protocol configurations is a control plane issue, as it pertains to the behavior of routing protocols over time, rather than the current state of the network's data plane.","['https://www.cs.cornell.edu/~rahul/papers/popl15-netkat.pdf', 'https://www.usenix.org/conference/nsdi14/technical-sessions/presentation/kazemian', 'https://dl.acm.org/doi/10.1145/2934872.2934886']",1,14_verification,0.95,0.7314253966040629
110,Which of the following is true about Kinetic policies? Select all that apply.,"a. State transitions can be exogenous or endogenous.
b. Kinetic's NuSMV verifier can verify that the data plane will never have loops.
c. State transitions can occur based on timing (e.g., a timeout).
d. The Kinetic controller can only process external events from routers and switches.
e. Pyretic's composition operators can help prevent state explosion.
",,"a,c,e","a,b,c,e",,"Kinetic is a network control platform that allows for dynamic policy changes in the network. The following statements are true about Kinetic policies: 

a. State transitions in Kinetic policies can be triggered by changes in the network (endogenous) or by external events (exogenous). This allows the network policy to adapt to a variety of situations.

b. Kinetic's NuSMV verifier is a tool that can be used to verify properties of the network, such as ensuring that the data plane will not have forwarding loops. This is important for network reliability and correctness.

c. Kinetic policies can indeed include state transitions based on timing conditions, such as timeouts. This allows policies to change state after a certain period of time has elapsed, which is useful for handling transient network conditions or failures.

e. Pyretic is a language for expressing network policies that can be composed together. Its composition operators can help manage the complexity of policies and thus help prevent state explosion, which is a problem where the number of states in a system grows exponentially with the number of variables.

The statement d is not true because the Kinetic controller is capable of processing both external and internal events, not just those from routers and switches.","['https://conferences.sigcomm.org/sigcomm/2013/papers/sigcomm/p199.pdf', 'https://www.cs.cornell.edu/projects/declarativenetworking/pyretic/pyretic-paper.pdf']",0,14_verification,0.95,0.9940126607380141
112,"Which of the following NuSMV expressions encodes the statement ""It is always possible for the policy state to go to 'allow'.""","a. SPEC AG (!authenticated -> AX policy=allow)
b. None of the above.
c. SPEC A [ policy=allow U authenticated ]
d. SPEC AG (authenticated -> AX policy=allow)
e. SPEC AG (EF policy=allow)
",,e,e,,"The correct expression that encodes the statement 'It is always possible for the policy state to go to 'allow'' is given by 'SPEC AG (EF policy=allow)'. This is because AG means 'on all paths, always', and EF means 'there exists a path, on which in the future', which combined translates to 'It is always the case that there exists a path such that at some point in the future the policy state will be 'allow''. The other options do not correctly represent the statement.","['https://nusmv.fbk.eu/NuSMV/userman/v21/nusmv_5.html', 'https://en.wikipedia.org/wiki/Computation_tree_logic']",1,14_verification,0.95,0.999987886094374
