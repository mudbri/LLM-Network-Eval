Question Number,Question Text,Choices,Valid Question?,Correct Answer,LLM Answer,Correct Explanation,LLM Explanation,URLs,Correct?,Topic,LLM Confidence,logprob Confidence
113,"Which are reasonable approaches for designing a fast, scalable, programmable data plane? Select all that apply.","a. Make hardware routers more programmable with custom OpenFlow chips.
b. Make software routers faster by reducing the need to copy packets from the kernel into user space.
c. Send all traffic through software switches running in user space.
d. Make software routers faster by distributing software routers across clusters.
e. Make software routers faster by amortizing packet-processing costs across batches of packets.
",,"a,b,d,e","b,d,e",,"Making software routers faster is a reasonable approach for designing a fast, scalable, programmable data plane. This can be achieved by: b) reducing the need to copy packets from kernel to user space, which eliminates a performance bottleneck;d) distributing software routers across clusters to scale out processing; ande) amortizing packet-processing costs across batches of packets to improve efficiency.Making hardware routers more programmable with custom chips (a) is challenging and less flexible than software approaches. Sending all traffic through user-space software switches (c) is not as performant as kernel-based packet processing.","['https://www.usenix.org/system/files/conference/nsdi17/nsdi17-firestone.pdf', 'https://www.usenix.org/system/files/conference/osdi14/osdi14-paper-panda.pdf']",0,10_programmable_data_planes,0.8,1
114,What are functions that are commonly performed by a programmable data plane? Select all that apply.,"a. Performing deep packet inspection
b. Forwarding
c. Specifying access control policies
d. Shaping traffic
e. Computing routes
",,"a,b,d","a,b,d",,"A programmable data plane commonly performs functions like deep packet inspection to examine packet contents beyond headers, packet forwarding based on defined rules, and traffic shaping to control bandwidth usage. While access control policies and route computation are important networking functions, they are typically handled by the control plane rather than the data plane itself.","['https://www.sdxcentral.com/networking/sdn/definitions/what-is-programmable-data-plane/', 'https://www.cisco.com/c/en/us/products/collateral/routers/network-convergence-system-5000-series/white-paper-c11-740360.html']",1,10_programmable_data_planes,0.9,1
115,Which of the following functions might be performed by a Click element? Select all that apply.,"a. Reading a packet from a network device
b. Dropping packets
c. Counting packets
d. Classifying packets into different priority queues
e. Computing shortest paths routes between two routers
",,"a,b,c,d","a,b,c,d",,"A Click element in the context of software defined networking can perform various packet processing functions. It can read packets from a network device (a), drop packets based on defined policies (b), count packets for monitoring and statistics (c), and classify packets into different priority queues for QoS purposes (d). However, computing shortest path routes between routers (e) is typically a control plane function performed by the SDN controller or routing protocols, not individual Click elements.","['Kohler, Eddie, et al. ""The Click modular router."" ACM Transactions on Computer Systems (TOCS) 18.3 (2000): 263-297.', 'Kreutz, Diego, et al. ""Software-defined networking: A comprehensive survey."" Proceedings of the IEEE 103.1 (2014): 14-76.']",1,10_programmable_data_planes,0.95,1
116,Which of the following are true about programmable data planes in Click? Select all that apply.,"a. Click elements cannot perform common data plane operations such as TTL decrement or checksum computations.
b. Data-plane processing in Click is limited to a fixed set of elements provided by the software.
c. Click elements can be composed to perform complex functions, such as the forwarding at an IP router.
d. Click configuration is a simplified version of Python.
e. Click elements can be composed to perform complex network-wide functions, such as shortest paths or BGP routing.
",,c,c,,"In Click, elements can be composed to perform complex data plane functions, such as the forwarding operations of an IP router. Elements in Click are modular components that perform specific packet processing tasks. By connecting elements together, Click allows building complex packet processing pipelines. However, Click elements are not limited to a fixed set (b) and can perform common data plane operations like TTL decrement and checksum computations (a). Click configuration uses its own language, not a simplified Python (d). While Click enables powerful data plane processing, it focuses on per-device packet processing pipelines rather than network-wide control plane functions like shortest path computations or BGP routing (e).","['https://www.net.t-labs.tu-berlin.de/teaching/computer_networking/03.04-click.html', 'https://github.com/kohler/click/wiki/FAQ']",1,10_programmable_data_planes,0.9,1
117,Why does a RouteBricks server assign one core per queue?,"a. Having multiple cores accessing the same queue would require each core to perform only one function in the packet processing pipeline, which is inefficient.
b. Having multiple cores accessing the same queue would require locking to prevent concurrent memory accesses, slowing packet forwarding performance.
c. Having multiple cores accessing the same queue might create the possibility that there is a queue that is not served by any cores.
d. Cores have heterogeneous performance, and packets are different sizes, so it makes sense to assign less powerful cores to queues that have smaller packets.
",,b,b,,"The correct answer is b. Having multiple cores accessing the same queue would require locking mechanisms to prevent concurrent access and modifications to the shared queue data structure. This locking overhead would slow down the packet forwarding performance, as cores would need to wait to acquire locks before processing packets from the queue. By assigning one core per queue, RouteBricks avoids the need for locking and allows each core to process packets from its dedicated queue independently, maximizing performance.","['RouteBricks: Exploiting Parallelism to Scale Software Routers, Dobrescu et al., ACM SIGOPS 2009', 'Scaling Software-Defined Network Controllers on Multicore Servers, Tootoonchian et al., ACM HotSDN 2012']",1,10_programmable_data_planes,0.9,1
118,What are some tricks commonly employed in software to accelerate packet forwarding? Select all that apply.,"a. Ethernet GRE tunnels
b. Large packet buffers that hold multiple packets that can be read with a single read
c. Forwarding smaller packets before larger packets
d. Avoiding lookups on the software bridge between virtual interfaces and physical interfaces
e. Batch processing
",,"a,b,d,e","b,e",,"Two common tricks used in software to accelerate packet forwarding are:b) Using large packet buffers that can hold multiple packets. This allows multiple packets to be read with a single read operation, reducing the overhead of frequent reads.  e) Employing batch processing, where a batch of packets are processed together rather than processing each packet individually. This amortizes the fixed processing costs over multiple packets.The other options are not directly related to software acceleration techniques for packet forwarding. Ethernet GRE tunnels, packet ordering based on size, and avoiding lookups on virtual-to-physical interface bridges do not provide significant forwarding speed improvements in software.","['Computer Networking: A Top-Down Approach, 7th Edition by Kurose and Ross', 'High Performance Packet Processing in Software by Gallenm√ºller et al., 2021 (https://ieeexplore.ieee.org/document/9369422)']",0,10_programmable_data_planes,0.9,1
119,What are some of the problems with current OpenFlow hardware that motivated a custom OpenFlow chip design? Select all that apply.,"a. Current hardware makes it difficult to implement multiple match action stages, and to repurpose TCAM and SRAM across multiple match-action stages.
b. Current hardware cannot forward traffic at line rates.
c. The current OpenFlow protocol depends on the constraints of conventional switching chips.
d. Current hardware cannot support OpenFlow 1.0 match-action primitives.
e. Current hardware is difficult to repurpose in the field.
",,"a,c,e","a,c,e",,"Current OpenFlow hardware has several limitations that motivated the design of custom OpenFlow chips. Firstly, conventional switching chips make it difficult to implement multiple match-action stages and flexibly allocate TCAM and SRAM resources across those stages (a). The OpenFlow protocol itself is also constrained by the capabilities of these conventional chips (c). Finally, the fixed-function nature of existing hardware makes it hard to repurpose switches in the field for new functionality (e). While early OpenFlow switches may have had performance limitations, modern hardware can generally forward traffic at line rate (b is incorrect). Current hardware also supports the match-action primitives defined in OpenFlow 1.0 (d is incorrect).","['McKeown, Nick, et al. ""OpenFlow: enabling innovation in campus networks."" ACM SIGCOMM Computer Communication Review 38.2 (2008): 69-74.', 'Bosshart, Pat, et al. ""Forwarding metamorphosis: Fast programmable match-action processing in hardware for SDN."" ACM SIGCOMM Computer Communication Review 43.4 (2013): 99-110.']",1,10_programmable_data_planes,0.9,1
120,"Which of the following are motivations for SwitchBlade, which supports composition of pre-synthesized hardware data plane modules on an FPGA? Select all that apply.","a. Most data plane protocols involve composing only a limited number of data-plane actions.
b. Experimental data planes may need to operate in parallel with production data planes.
c. Programming in Verilog is difficult.
d. FPGAs are lower-cost and consume less power than conventional ASICs or OpenFlow switching chips.
e. Programming in C is difficult.
",,"a,b,c","a,b",,"The motivations for SwitchBlade's approach of composing pre-synthesized hardware data plane modules on an FPGA are:a) Most data plane protocols can be implemented by composing a limited set of common data-plane actions or primitives. Pre-synthesizing these common modules allows quick composition.  b) Experimental data planes often need to run in parallel with production data planes on the same switch. Using an FPGA allows flexibly dedicating resources to each.While programming FPGAs directly using Verilog or other HDLs is difficult (choice c), that is not a direct motivation for SwitchBlade's modular composition approach. Choices d and e are not mentioned as motivations for SwitchBlade.","['SwitchBlade: A Platform for Rapid Deployment of Network Protocols on Programmable Hardware, Anwer et al., SIGCOMM 2010', 'https://yuba.stanford.edu/~nickm/papers/anwer2010switchblade.pdf']",0,10_programmable_data_planes,0.95,1
