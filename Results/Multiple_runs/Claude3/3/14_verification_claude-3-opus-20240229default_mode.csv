Question Number,Question Text,Choices,Valid Question?,Correct Answer,LLM Answer,Correct Explanation,LLM Explanation,URLs,Correct?,Topic,LLM Confidence,logprob Confidence
106,Which of the following are true about configuration verification? Select all that apply.,"a. Configuration verification can only detect errors after the configuration is installed on production routers.
b. Configuration verification cannot detect incorrect protocol behavior that may result from faulty hardware.
c. Verifying the correctness of network behavior based on configuration requires a model of protocol behavior.
d. Configuration verification requires a large-scale simulation of network protocols, complete with tests for different message orderings and timings.
e. Configuration verification cannot detect incorrect protocol behavior that may result from buggy software.
",,"b,c,e",c,,"Configuration verification requires a model of protocol behavior in order to check the correctness of network behavior based on the configuration. It does not necessarily require large-scale simulations with different message orderings and timings (d). Configuration verification can detect potential errors before the configuration is installed on production routers, not only after (a). However, it may not be able to detect incorrect protocol behavior resulting from faulty hardware (b) or buggy software (e), as those are runtime issues separate from the configuration itself.","['https://www.cs.cornell.edu/courses/cs5413/2021sp/lectures/18-verification.pdf', 'https://www.usenix.org/conference/nsdi20/presentation/abhashkumar', 'https://www.cs.cornell.edu/~jnfoster/papers/frenetic-icfp13.pdf']",0,14_verification,0.9,1
107,"Which of the following assertions could be verified with configuration verification (i.e., of a snapshot of router and switch configuration)? Select all that apply.","a. A route learned from one peer will not be readvertised to another peer.
b. The current settings of link weights will result in all routers being connected.
c. The configuration of route reflectors and clients ensures that any route learned from a neighboring AS will propagate to all routers in the topology.
d. There is no traffic pattern that would ever result in a stateful firewall dropping traffic.
e. Any time that an infection occurs, hosts are automatically quarantined.
",,"a,b,c","a,c",,"Configuration verification can check assertions about the propagation of routes based on the configuration of route reflectors and clients (c) and route advertisement policies between peers (a). However, it cannot verify connectivity resulting from link weight settings (b) without a network model. It also cannot reason about all possible traffic patterns interacting with a stateful firewall (d) or the automatic quarantining of infected hosts (e) without additional context beyond configuration.","['https://www.cs.cornell.edu/~jnfoster/papers/frenetic-icfp.pdf', 'https://www.usenix.org/system/files/conference/nsdi15/nsdi15-paper-fogel.pdf']",0,14_verification,0.9,1
108,Which of the following are true about data-plane verification? Select all that apply.,"a. Data-plane verification techniques such as header-space analysis typically operate on a single ""snapshot"" of data-plane state.
b. Data plane verification can only operate on the forwarding table of a single router or switch; network-wide analysis is not possible.
c. Data-plane verification may detect errors that configuration analysis can miss in the cases of buggy control-plane software.
d. Data-plane verification requires accurate modeling of network protocols, including which bits are present in which part of the packet header.
e. Header-space analysis can only provide verification/analysis for specific packets; it cannot answer questions for general parts of flowspace.
",,"a,c","a,c,d",,"Data-plane verification techniques like header-space analysis typically operate on a snapshot of the data-plane state across the network (a). While configuration analysis can catch many errors, data-plane verification can detect issues caused by buggy control-plane software that may be missed by just analyzing configurations (c). Data-plane verification requires accurately modeling network protocols and header fields to reason about packet processing (d). Header-space analysis is not limited to just specific packets - it can answer questions about general parts of the flow space (e is incorrect). Data-plane verification is not limited to a single device and can perform network-wide analysis (b is incorrect).","['Header Space Analysis: Static Checking for Networks, Kazemian et al., NSDI 2012', 'Anteater: A Service for Checking Reachability in OpenFlow Networks, Mai et al., OSDI 2011', 'Software Defined Networking, Kreutz et al., Proceedings of the IEEE, 2015']",0,14_verification,0.95,1
109,Which of the following assertions could be verified with data plane verification? Select all that apply.,"a. The network will remain connected, given the failure of at most two links.
b. Two virtual network ""slices"" are not completely isolated: it is possible for traffic to travel from one slice to the other.
c. The configuration of the network's routing protocols will result in persistent oscillation (i.e., they will never settle on a stable set of routes).
d. The forwarding table state in the routers across the network will result in a forwarding loop.
e. The rules installed on the firewalls in the network ensure that only port 80 traffic can ever reach the web server from the rest of the Internet.
",,"b,d,e","b,d,e",,"Data plane verification focuses on analyzing the actual forwarding behavior of the network based on the installed forwarding rules and firewall policies. It can verify isolation between network slices (b), detect forwarding loops resulting from the forwarding table state (d), and check firewall rules to ensure only allowed traffic reaches certain destinations (e). Verifying network connectivity under link failures (a) and detecting routing protocol oscillations (c) would fall under control plane verification, as they relate to the routing protocols and topology rather than the data plane forwarding.","['https://www.cs.cornell.edu/courses/cs5413/2021fa/notes/29-verification.html', 'https://www.usenix.org/system/files/nsdi19spring_subramanian_prepub.pdf', 'https://www.cs.princeton.edu/courses/archive/fall17/cos561/papers/Veriflow13.pdf']",1,14_verification,0.9,1
110,Which of the following is true about Kinetic policies? Select all that apply.,"a. State transitions can be exogenous or endogenous.
b. Kinetic's NuSMV verifier can verify that the data plane will never have loops.
c. State transitions can occur based on timing (e.g., a timeout).
d. The Kinetic controller can only process external events from routers and switches.
e. Pyretic's composition operators can help prevent state explosion.
",,"a,c,e","a,c,e",,"Kinetic policies can have both exogenous state transitions triggered by external events and endogenous transitions triggered by internal timers or counters (a, c). Pyretic's composition operators like parallel and sequential composition can help manage the complexity and potential state explosion of Kinetic policies (e). However, the Kinetic controller can process external events beyond just those from routers and switches (d is incorrect). And while Kinetic's verifier can check certain properties, it cannot guarantee the data plane will never have loops under all circumstances (b is incorrect).","['Kinetic: Verifiable Dynamic Network Control, H. Kim, et al., NSDI 2015', 'Pyretic project website, https://www.frenetic-lang.org/pyretic/', 'Coursera course - Software Defined Networking, Module 4: Programming SDNs']",1,14_verification,0.9,1
112,"Which of the following NuSMV expressions encodes the statement ""It is always possible for the policy state to go to 'allow'.""","a. SPEC AG (!authenticated -> AX policy=allow)
b. None of the above.
c. SPEC A [ policy=allow U authenticated ]
d. SPEC AG (authenticated -> AX policy=allow)
e. SPEC AG (EF policy=allow)
",,e,e,,"The given statement can be translated to CTL as 'AG (EF policy=allow)'. This means that from every reachable state (AG), there exists a path (EF) where the policy eventually becomes 'allow'. Options a and d only allow the policy to go to 'allow' when not authenticated or authenticated respectively, which is more restrictive than the given statement. Option c uses the 'until' operator which is not relevant here. Therefore, option e is the correct choice that encodes the given statement.","['Edmund M. Clarke, Orna Grumberg, and Doron A. Peled. 2001. Model Checking. MIT Press.', 'Christel Baier and Joost-Pieter Katoen. 2008. Principles of Model Checking. MIT Press.']",1,14_verification,0.9,1
