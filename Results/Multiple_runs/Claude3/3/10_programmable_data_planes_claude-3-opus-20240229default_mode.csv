Question Number,Question Text,Choices,Valid Question?,Correct Answer,LLM Answer,Correct Explanation,LLM Explanation,URLs,Correct?,Topic,LLM Confidence,logprob Confidence
113,"Which are reasonable approaches for designing a fast, scalable, programmable data plane? Select all that apply.","a. Make hardware routers more programmable with custom OpenFlow chips.
b. Make software routers faster by reducing the need to copy packets from the kernel into user space.
c. Send all traffic through software switches running in user space.
d. Make software routers faster by distributing software routers across clusters.
e. Make software routers faster by amortizing packet-processing costs across batches of packets.
",,"a,b,d,e","b,d,e",,Making software routers faster can be achieved through several approaches:b) Reducing the need to copy packets between kernel and user space eliminates costly context switches and improves performance.  d) Distributing software routers across clusters allows load balancing and parallel processing of packets to increase throughput.e) Processing packets in batches amortizes the fixed costs of scheduling and reduces per-packet overhead.Making hardware routers more programmable (a) or sending all traffic through user-space software switches (c) are not ideal as they either limit scalability or add latency.,"['https://www.usenix.org/system/files/conference/nsdi17/nsdi17-firestone.pdf', 'https://www.usenix.org/system/files/conference/nsdi15/nsdi15-paper-pesterev.pdf']",0,10_programmable_data_planes,0.8,1
114,What are functions that are commonly performed by a programmable data plane? Select all that apply.,"a. Performing deep packet inspection
b. Forwarding
c. Specifying access control policies
d. Shaping traffic
e. Computing routes
",,"a,b,d","a,b,d",,"A programmable data plane commonly performs functions like deep packet inspection to examine packet contents beyond headers, packet forwarding based on defined rules, and traffic shaping to control bandwidth usage. While access control policies and route computation are important networking functions, they are typically handled by the control plane rather than directly in the data plane.","['https://www.sdxcentral.com/networking/sdn/definitions/what-is-programmable-data-plane/', 'https://www.cisco.com/c/en/us/products/collateral/routers/network-convergence-system-5000-series/white-paper-c11-740360.html']",1,10_programmable_data_planes,0.9,1
115,Which of the following functions might be performed by a Click element? Select all that apply.,"a. Reading a packet from a network device
b. Dropping packets
c. Counting packets
d. Classifying packets into different priority queues
e. Computing shortest paths routes between two routers
",,"a,b,c,d","a,b,c,d",,"A Click element in software defined networking can perform various packet processing functions. This includes reading packets from network devices (a), dropping packets based on defined policies (b), counting packets for monitoring and statistics (c), and classifying packets into different priority queues for QoS purposes (d). However, computing shortest path routes between routers (e) is typically handled by the SDN controller rather than individual Click elements.","['https://www.sciencedirect.com/topics/computer-science/click-modular-router', 'https://www.networkcomputing.com/networking/introduction-click-modular-router', 'https://dl.acm.org/doi/10.1145/383059.383071']",1,10_programmable_data_planes,0.95,1
116,Which of the following are true about programmable data planes in Click? Select all that apply.,"a. Click elements cannot perform common data plane operations such as TTL decrement or checksum computations.
b. Data-plane processing in Click is limited to a fixed set of elements provided by the software.
c. Click elements can be composed to perform complex functions, such as the forwarding at an IP router.
d. Click configuration is a simplified version of Python.
e. Click elements can be composed to perform complex network-wide functions, such as shortest paths or BGP routing.
",,c,c,,"In Click, elements can be composed to perform complex data plane functions like IP forwarding in a router. Elements in Click are modular building blocks that encapsulate packet processing functionality. By connecting elements together, Click allows building complex packet processing pipelines. However, Click elements are not limited to a fixed set (b) and can perform common data plane operations (a). Click configuration uses its own language, not Python (d). While Click enables building complex data plane functions, it operates on a per-device level and does not directly implement network-wide control plane functions like shortest path routing or BGP (e).","['https://www.cs.princeton.edu/courses/archive/fall13/cos597E/papers/click00.pdf', 'https://github.com/kohler/click/wiki/ClickDocumentation']",1,10_programmable_data_planes,0.9,1
117,Why does a RouteBricks server assign one core per queue?,"a. Having multiple cores accessing the same queue would require each core to perform only one function in the packet processing pipeline, which is inefficient.
b. Having multiple cores accessing the same queue would require locking to prevent concurrent memory accesses, slowing packet forwarding performance.
c. Having multiple cores accessing the same queue might create the possibility that there is a queue that is not served by any cores.
d. Cores have heterogeneous performance, and packets are different sizes, so it makes sense to assign less powerful cores to queues that have smaller packets.
",,b,b,,"The correct answer is b. Having multiple cores accessing the same queue would require locking mechanisms to prevent concurrent memory accesses to the shared queue. This locking overhead would slow down the packet forwarding performance. By assigning one core per queue, RouteBricks avoids the need for locking and allows each core to process packets from its dedicated queue independently, enabling faster packet forwarding.","['RouteBricks: Exploiting Parallelism to Scale Software Routers, Dobrescu et al., ACM SIGOPS 22nd Symposium on Operating Systems Principles, 2009.', 'https://www.cs.princeton.edu/courses/archive/fall13/cos561/papers/RouteBricks09.pdf']",1,10_programmable_data_planes,0.95,1
118,What are some tricks commonly employed in software to accelerate packet forwarding? Select all that apply.,"a. Ethernet GRE tunnels
b. Large packet buffers that hold multiple packets that can be read with a single read
c. Forwarding smaller packets before larger packets
d. Avoiding lookups on the software bridge between virtual interfaces and physical interfaces
e. Batch processing
",,"a,b,d,e","b,e",,"Two common tricks used in software to accelerate packet forwarding are:b) Using large packet buffers that can hold multiple packets, which can then be read with a single read operation. This reduces the overhead of multiple smaller reads.  e) Employing batch processing, where a batch of packets are processed together rather than individually. This amortizes the per-packet processing overhead over multiple packets.The other options are not directly relevant to software acceleration techniques for packet forwarding:a) Ethernet GRE tunnels encapsulate traffic but don't inherently accelerate forwarding c) Prioritizing smaller packets before larger ones is a QoS/fairness mechanism rather than an acceleration techniqued) Avoiding lookups on the software bridge helps reduce latency but is an architectural choice rather than a software optimization","['Computer Networking: A Top-Down Approach, 7th Edition by Kurose and Ross, Section 4.4 on Switching', 'https://www.kernel.org/doc/Documentation/networking/scaling.txt - Linux kernel networking documentation on scaling techniques']",0,10_programmable_data_planes,0.9,1
119,What are some of the problems with current OpenFlow hardware that motivated a custom OpenFlow chip design? Select all that apply.,"a. Current hardware makes it difficult to implement multiple match action stages, and to repurpose TCAM and SRAM across multiple match-action stages.
b. Current hardware cannot forward traffic at line rates.
c. The current OpenFlow protocol depends on the constraints of conventional switching chips.
d. Current hardware cannot support OpenFlow 1.0 match-action primitives.
e. Current hardware is difficult to repurpose in the field.
",,"a,c,e","a,c,e",,"The problems with current OpenFlow hardware that motivated a custom chip design include: a) difficulty implementing multiple match-action stages and repurposing TCAM and SRAM across stages, c) the OpenFlow protocol being dependent on constraints of conventional switching chips, and e) difficulty repurposing current hardware in the field. Current hardware can generally forward traffic at line rates (b) and does support OpenFlow 1.0 match-action primitives (d).","['McKeown, Nick, et al. ""OpenFlow: enabling innovation in campus networks."" ACM SIGCOMM Computer Communication Review 38.2 (2008): 69-74.', 'Bosshart, Pat, et al. ""P4: Programming protocol-independent packet processors."" ACM SIGCOMM Computer Communication Review 44.3 (2014): 87-95.']",1,10_programmable_data_planes,0.9,1
120,"Which of the following are motivations for SwitchBlade, which supports composition of pre-synthesized hardware data plane modules on an FPGA? Select all that apply.","a. Most data plane protocols involve composing only a limited number of data-plane actions.
b. Experimental data planes may need to operate in parallel with production data planes.
c. Programming in Verilog is difficult.
d. FPGAs are lower-cost and consume less power than conventional ASICs or OpenFlow switching chips.
e. Programming in C is difficult.
",,"a,b,c","a,b,c",,"The motivations for SwitchBlade's approach of composing pre-synthesized hardware data plane modules on an FPGA are: a) Most data plane protocols can be implemented by composing a limited set of common data-plane actions, making pre-synthesis of modules practical.   b) Experimental data planes often need to run in parallel with production ones on the same hardware, which an FPGA enables. c) Programming FPGAs directly in Verilog is difficult, so pre-synthesized modules simplify the development process. While FPGAs can be lower cost and power than some alternatives (d), this isn't a key motivation for SwitchBlade's composition approach. The difficulty of programming in C (e) is not relevant to the FPGA use case.","['SwitchBlade: A Platform for Rapid Deployment of Network Protocols on Programmable Hardware, Anwer et al., SIGCOMM 2010', 'Lecture notes on Software Defined Networking, Prof. Nick Feamster, University of Chicago']",1,10_programmable_data_planes,0.9,1
