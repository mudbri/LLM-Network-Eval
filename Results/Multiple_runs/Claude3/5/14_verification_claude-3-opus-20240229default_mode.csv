Question Number,Question Text,Choices,Valid Question?,Correct Answer,LLM Answer,Correct Explanation,LLM Explanation,URLs,Correct?,Topic,LLM Confidence,logprob Confidence
106,Which of the following are true about configuration verification? Select all that apply.,"a. Configuration verification can only detect errors after the configuration is installed on production routers.
b. Configuration verification cannot detect incorrect protocol behavior that may result from faulty hardware.
c. Verifying the correctness of network behavior based on configuration requires a model of protocol behavior.
d. Configuration verification requires a large-scale simulation of network protocols, complete with tests for different message orderings and timings.
e. Configuration verification cannot detect incorrect protocol behavior that may result from buggy software.
",,"b,c,e",c,,"Configuration verification requires a model of protocol behavior in order to check the correctness of network behavior based on the configuration. It does not necessarily require large-scale simulations with tests for different message orderings and timings (d). Configuration verification can detect errors before the configuration is installed on production routers (a). However, it cannot detect incorrect protocol behavior resulting from faulty hardware (b) or buggy software (e), as those are runtime issues not detectable from the configuration alone.","[""Computer Networking: A Top-Down Approach, 7th Edition by Kurose and Ross, Section 4.4 'Network Management and SNMP'"", ""Software Defined Networks: A Comprehensive Approach, 2nd Edition by Goransson, Black and Culver, Chapter 10 'Verification and Troubleshooting'""]",0,14_verification,0.9,1
107,"Which of the following assertions could be verified with configuration verification (i.e., of a snapshot of router and switch configuration)? Select all that apply.","a. A route learned from one peer will not be readvertised to another peer.
b. The current settings of link weights will result in all routers being connected.
c. The configuration of route reflectors and clients ensures that any route learned from a neighboring AS will propagate to all routers in the topology.
d. There is no traffic pattern that would ever result in a stateful firewall dropping traffic.
e. Any time that an infection occurs, hosts are automatically quarantined.
",,"a,b,c","a,c",,"Configuration verification can check assertions about the intended behavior based on the current configuration settings. Options a and c describe assertions about route propagation behavior that could be verified by analyzing the configuration of BGP settings, route reflectors, and peering relationships. The other options cannot be verified solely from configuration - option b requires analyzing the topology and link weights, option d depends on dynamic traffic patterns, and option e involves the actual behavior of a security system beyond just configuration.","['Software Defined Networks: A Systems Approach by Peterson, Larry L. and Davie, Bruce S.', 'Computer Networking: A Top-Down Approach by Kurose, James F. and Ross, Keith W.']",0,14_verification,0.9,1
108,Which of the following are true about data-plane verification? Select all that apply.,"a. Data-plane verification techniques such as header-space analysis typically operate on a single ""snapshot"" of data-plane state.
b. Data plane verification can only operate on the forwarding table of a single router or switch; network-wide analysis is not possible.
c. Data-plane verification may detect errors that configuration analysis can miss in the cases of buggy control-plane software.
d. Data-plane verification requires accurate modeling of network protocols, including which bits are present in which part of the packet header.
e. Header-space analysis can only provide verification/analysis for specific packets; it cannot answer questions for general parts of flowspace.
",,"a,c","a,c,d",,Data-plane verification techniques like header-space analysis typically operate on a snapshot of the data-plane state across the network (a). It can detect errors missed by configuration analysis if there are bugs in the control-plane software that cause the data plane to behave differently than intended (c). Data-plane verification requires accurately modeling the network protocols and header fields to reason about packet behavior (d). Header-space analysis is not limited to specific packets but can analyze general parts of the flow space (e is incorrect). Data-plane verification is not limited to a single device but can analyze network-wide behavior (b is incorrect).,"['A Survey of Techniques for Formal Verification of Networks, Beckett et al, 2014', 'Header Space Analysis: Static Checking For Networks, Kazemian et al, NSDI 2012', 'Software Defined Networking course materials, Stanford University']",0,14_verification,0.95,1
109,Which of the following assertions could be verified with data plane verification? Select all that apply.,"a. The network will remain connected, given the failure of at most two links.
b. Two virtual network ""slices"" are not completely isolated: it is possible for traffic to travel from one slice to the other.
c. The configuration of the network's routing protocols will result in persistent oscillation (i.e., they will never settle on a stable set of routes).
d. The forwarding table state in the routers across the network will result in a forwarding loop.
e. The rules installed on the firewalls in the network ensure that only port 80 traffic can ever reach the web server from the rest of the Internet.
",,"b,d,e","b,d,e",,"Data plane verification techniques can verify assertions related to the actual forwarding behavior of the network, based on the current forwarding table state in the switches/routers. This includes detecting forwarding loops (d) and checking isolation between virtual network slices (b). Firewall rule analysis to verify traffic restrictions (e) is also a data plane property. However, verifying network connectivity under link failures (a) or analyzing routing protocol convergence (c) require control plane verification techniques that reason about the routing protocols and topology, rather than just the data plane forwarding state.","['A Survey of Network Verification Techniques. Ratul Mahajan, Anirudh Sivaraman, and Aditya Akella. ACM SIGCOMM Computer Communication Review, Volume 49, Issue 1, January 2019.', 'Network Verification: Theory and Practice. RÃ¼diger Birkner. PhD Thesis, ETH Zurich, 2021.']",1,14_verification,0.9,1
110,Which of the following is true about Kinetic policies? Select all that apply.,"a. State transitions can be exogenous or endogenous.
b. Kinetic's NuSMV verifier can verify that the data plane will never have loops.
c. State transitions can occur based on timing (e.g., a timeout).
d. The Kinetic controller can only process external events from routers and switches.
e. Pyretic's composition operators can help prevent state explosion.
",,"a,c,e","a,c,e",,"Kinetic policies can have both exogenous state transitions, which are triggered by external events, and endogenous state transitions, which occur based on internal policy logic (a). These state transitions can occur based on timing, such as a timeout (c). While Kinetic uses a model checker, it does not guarantee loop-free data planes (b is incorrect). The Kinetic controller can process external events from various sources, not just routers and switches (d is incorrect). Pyretic's composition operators, which Kinetic builds upon, can help manage the complexity of FSM-based policies and prevent state explosion (e).","['Kinetic: Verifiable Dynamic Network Control, H. Kim et al., NSDI 2015', 'Pyretic: A Language and Runtime System for Network Programming Languages, J. Reich et al., SOSP 2013']",1,14_verification,0.9,1
112,"Which of the following NuSMV expressions encodes the statement ""It is always possible for the policy state to go to 'allow'.""","a. SPEC AG (!authenticated -> AX policy=allow)
b. None of the above.
c. SPEC A [ policy=allow U authenticated ]
d. SPEC AG (authenticated -> AX policy=allow)
e. SPEC AG (EF policy=allow)
",,e,e,,"The correct answer is (e) SPEC AG (EF policy=allow). This NuSMV expression uses the CTL operators AG (globally) and EF (exists finally). It states that from every reachable state (AG), there exists a path to a future state where policy=allow (EF policy=allow). In other words, it is always possible to eventually reach a state where policy is 'allow', which matches the given statement.","['Principles of Model Checking by Christel Baier and Joost-Pieter Katoen, Chapter 6 on Temporal Logic', 'NuSMV 2.6 User Manual, Section 3.4.2 on CTL Specifications']",1,14_verification,0.95,1
