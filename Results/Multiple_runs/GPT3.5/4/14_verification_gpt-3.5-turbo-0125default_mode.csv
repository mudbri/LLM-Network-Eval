Question Number,Question Text,Choices,Valid Question?,Correct Answer,LLM Answer,Correct Explanation,LLM Explanation,URLs,Correct?,Topic,LLM Confidence,logprob Confidence
106,Which of the following are true about configuration verification? Select all that apply.,"a. Configuration verification can only detect errors after the configuration is installed on production routers.
b. Configuration verification cannot detect incorrect protocol behavior that may result from faulty hardware.
c. Verifying the correctness of network behavior based on configuration requires a model of protocol behavior.
d. Configuration verification requires a large-scale simulation of network protocols, complete with tests for different message orderings and timings.
e. Configuration verification cannot detect incorrect protocol behavior that may result from buggy software.
",,"b,c,e",c,,Verifying the correctness of network behavior based on configuration requires a model of protocol behavior. This is true because configuration verification needs to compare the actual behavior of the network with the expected behavior based on the configuration settings.,[],0,14_verification,0.9,0.9996238556100456
107,"Which of the following assertions could be verified with configuration verification (i.e., of a snapshot of router and switch configuration)? Select all that apply.","a. A route learned from one peer will not be readvertised to another peer.
b. The current settings of link weights will result in all routers being connected.
c. The configuration of route reflectors and clients ensures that any route learned from a neighboring AS will propagate to all routers in the topology.
d. There is no traffic pattern that would ever result in a stateful firewall dropping traffic.
e. Any time that an infection occurs, hosts are automatically quarantined.
",,"a,b,c","a,b",,"{'a': 'A route learned from one peer will not be readvertised to another peer can be verified by checking the configuration to ensure that route redistribution or advertisement rules are correctly implemented.', 'b': 'The current settings of link weights will result in all routers being connected can be verified by examining the configuration to confirm that the link weights are configured properly to establish connectivity between all routers.', 'c': 'The configuration of route reflectors and clients ensuring route propagation is a function of the network design and not solely verifiable through configuration verification.', 'd': 'Verifying that there is no traffic pattern resulting in a stateful firewall dropping traffic requires detailed traffic analysis and testing, not just configuration verification.', 'e': 'Automatically quarantining hosts upon infection is more related to security policies and automated response mechanisms rather than configuration verification.'}",[],0,14_verification,0.9,0.7973555528350262
108,Which of the following are true about data-plane verification? Select all that apply.,"a. Data-plane verification techniques such as header-space analysis typically operate on a single ""snapshot"" of data-plane state.
b. Data plane verification can only operate on the forwarding table of a single router or switch; network-wide analysis is not possible.
c. Data-plane verification may detect errors that configuration analysis can miss in the cases of buggy control-plane software.
d. Data-plane verification requires accurate modeling of network protocols, including which bits are present in which part of the packet header.
e. Header-space analysis can only provide verification/analysis for specific packets; it cannot answer questions for general parts of flowspace.
",,"a,c","a,c,d",,"a. Data-plane verification techniques like header-space analysis indeed operate on a single 'snapshot' of data-plane state to analyze the behavior of the network. c. Data-plane verification can detect errors that configuration analysis might miss, especially in scenarios where there are issues with the control-plane software. d. Accurate modeling of network protocols, including the presence of bits in packet headers, is crucial for data-plane verification.",[],0,14_verification,0.9,0.9998983396211665
109,Which of the following assertions could be verified with data plane verification? Select all that apply.,"a. The network will remain connected, given the failure of at most two links.
b. Two virtual network ""slices"" are not completely isolated: it is possible for traffic to travel from one slice to the other.
c. The configuration of the network's routing protocols will result in persistent oscillation (i.e., they will never settle on a stable set of routes).
d. The forwarding table state in the routers across the network will result in a forwarding loop.
e. The rules installed on the firewalls in the network ensure that only port 80 traffic can ever reach the web server from the rest of the Internet.
",,"b,d,e","b,e",,Data plane verification involves checking the actual behavior of the network by examining the data packets as they traverse the network. Assertion b can be verified by data plane verification to confirm if traffic can move between the virtual network slices. Assertion e can also be verified by checking the rules installed on the firewalls to ensure only port 80 traffic reaches the web server.,[],0,14_verification,0.9,0.7980699481902512
110,Which of the following is true about Kinetic policies? Select all that apply.,"a. State transitions can be exogenous or endogenous.
b. Kinetic's NuSMV verifier can verify that the data plane will never have loops.
c. State transitions can occur based on timing (e.g., a timeout).
d. The Kinetic controller can only process external events from routers and switches.
e. Pyretic's composition operators can help prevent state explosion.
",,"a,c,e","a,c",,"a. State transitions can be exogenous or endogenous: In Kinetic policies, state transitions can be triggered by events either internal to the network (endogenous) or external to the network (exogenous). c. State transitions can occur based on timing (e.g., a timeout): Kinetic policies can define state transitions based on timing, such as timeouts, in addition to other conditions.",['https://dl.acm.org/doi/10.1145/2997465.2997497'],0,14_verification,0.9,0.9388010183030824
112,"Which of the following NuSMV expressions encodes the statement ""It is always possible for the policy state to go to 'allow'.""","a. SPEC AG (!authenticated -> AX policy=allow)
b. None of the above.
c. SPEC A [ policy=allow U authenticated ]
d. SPEC AG (authenticated -> AX policy=allow)
e. SPEC AG (EF policy=allow)
",,e,a,,"The correct expression is 'SPEC AG (!authenticated -> AX policy=allow)'. This expression states that 'It is always possible (AG) that if not authenticated (!authenticated), then in the next state (AX), the policy state is 'allow'.",[],0,14_verification,0.9,0.6557589839907435
