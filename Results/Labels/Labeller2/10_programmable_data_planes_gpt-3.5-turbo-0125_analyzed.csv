Question Number,Question Text,Choices,Correct Answer,LLM Answer,LLM Explanation,URLs,Correct?,Topic,LLM Confidence,logprob Confidence,SM - Description,SM - Misunderstanding General,SM - Misunderstanding Reasons,SM - Misunderstanding General (secondary),SM - Misunderstanding Reasons (secondary),AQ - Inferrable(0-2)?,Source links work(number),Sources Types,Sources Relevant(number),AQ - Precise?,AQ - Explainable?,Effect - Conceptual error in explanaiton?(0/1),Effect - Subtopics,CD - detection student(1-3),CD - correction student(1-8),CD - detection knowledgeable(1-3),CD - correction knowledgeable(1-8),Score-right-minus-wrong
113,"Which are reasonable approaches for designing a fast, scalable, programmable data plane? Select all that apply.","a. Make hardware routers more programmable with custom OpenFlow chips.
b. Make software routers faster by reducing the need to copy packets from the kernel into user space.
c. Send all traffic through software switches running in user space.
d. Make software routers faster by distributing software routers across clusters.
e. Make software routers faster by amortizing packet-processing costs across batches of packets.
","a,b,d,e","b,d,e","{'b': 'Making software routers faster by reducing the need to copy packets from the kernel into user space is a reasonable approach as it minimizes unnecessary overhead and improves performance.', 'd': 'Distributing software routers across clusters can enhance scalability and speed by parallelizing packet processing and utilizing resources efficiently.', 'e': 'Amortizing packet-processing costs across batches of packets helps in optimizing performance by reducing per-packet processing overhead.'}",[],0,10_programmable_data_planes,0.9,0.995540574385731,,Wrong Facts/Concept,Incorrect information/concept,,,0,,,,1,0,0,,3,3,1,1,0.6
114,What are functions that are commonly performed by a programmable data plane? Select all that apply.,"a. Performing deep packet inspection
b. Forwarding
c. Specifying access control policies
d. Shaping traffic
e. Computing routes
","a,b,d","a,b,c","The functions commonly performed by a programmable data plane include: 
 a. Performing deep packet inspection: Programmable data planes can inspect packets at a deeper level to extract specific information for various purposes. 
 b. Forwarding: This is a fundamental function of the data plane, where packets are forwarded based on predefined rules or instructions. 
 c. Specifying access control policies: Data planes can enforce access control policies by examining packets and making decisions based on defined rules.",[],0,10_programmable_data_planes,0.9,0.799339390194935,,"Misinterpreting questions,     Wrong Facts/Concept","Incorrect information/concept,     Misinterpreting a word",,,0,,,,1,0,0,,2,3,1,2,0.2
116,Which of the following are true about programmable data planes in Click? Select all that apply.,"a. Click elements cannot perform common data plane operations such as TTL decrement or checksum computations.
b. Data-plane processing in Click is limited to a fixed set of elements provided by the software.
c. Click elements can be composed to perform complex functions, such as the forwarding at an IP router.
d. Click configuration is a simplified version of Python.
e. Click elements can be composed to perform complex network-wide functions, such as shortest paths or BGP routing.
",c,"c,e","The correct statements about programmable data planes in Click are: 
 c. Click elements can be composed to perform complex functions, such as the forwarding at an IP router. Click allows for the composition of elements to create custom data plane functions. 
 e. Click elements can be composed to perform complex network-wide functions, such as shortest paths or BGP routing. Click's programmable nature enables the creation of network-wide functions beyond simple forwarding.",['https://dl.acm.org/doi/10.1145/1400097.1400098'],0,10_programmable_data_planes,0.9,0.998083119934786,,Wrong Facts/Concept,Incorrect information/concept,,,0,,,,1,1,1,,3,4,3,4,0.6
118,What are some tricks commonly employed in software to accelerate packet forwarding? Select all that apply.,"a. Ethernet GRE tunnels
b. Large packet buffers that hold multiple packets that can be read with a single read
c. Forwarding smaller packets before larger packets
d. Avoiding lookups on the software bridge between virtual interfaces and physical interfaces
e. Batch processing
","a,b,d,e","b,c,d,e","{'b': 'Large packet buffers that hold multiple packets that can be read with a single read are commonly employed to accelerate packet forwarding because they reduce the number of memory accesses needed to process packets.', 'c': 'Forwarding smaller packets before larger packets is a trick commonly used to accelerate packet forwarding as smaller packets can be processed and forwarded more quickly, reducing latency.', 'd': 'Avoiding lookups on the software bridge between virtual interfaces and physical interfaces helps in accelerating packet forwarding by reducing the processing overhead involved in performing lookups.', 'e': 'Batch processing is a technique used to accelerate packet forwarding by processing multiple packets together, reducing the processing overhead associated with handling individual packets.'}",[],0,10_programmable_data_planes,0.9,0.737775743541238,,Wrong Facts/Concept,Incorrect information/concept,,,0,,,,1,0,1,,3,3,3,3,0.2
119,What are some of the problems with current OpenFlow hardware that motivated a custom OpenFlow chip design? Select all that apply.,"a. Current hardware makes it difficult to implement multiple match action stages, and to repurpose TCAM and SRAM across multiple match-action stages.
b. Current hardware cannot forward traffic at line rates.
c. The current OpenFlow protocol depends on the constraints of conventional switching chips.
d. Current hardware cannot support OpenFlow 1.0 match-action primitives.
e. Current hardware is difficult to repurpose in the field.","a,c,e","a,b","a. Current hardware makes it difficult to implement multiple match action stages, and to repurpose TCAM and SRAM across multiple match-action stages: This is a known issue with current OpenFlow hardware as it lacks the flexibility to efficiently handle multiple match-action stages and reuse memory resources across these stages. b. Current hardware cannot forward traffic at line rates: One of the motivations for custom OpenFlow chip design was to address the limitation of current hardware in forwarding traffic at line rates, which is crucial for high-performance networking.",['https://dl.acm.org/doi/10.1145/2342356.2342428'],0,10_programmable_data_planes,0.9,0.944725973299328,,Wrong Facts/Concept,Incorrect information/concept,,,0,,,,1,0,1,,3,4,2,4,0.0
120,"Which of the following are motivations for SwitchBlade, which supports composition of pre-synthesized hardware data plane modules on an FPGA? Select all that apply.","a. Most data plane protocols involve composing only a limited number of data-plane actions.
b. Experimental data planes may need to operate in parallel with production data planes.
c. Programming in Verilog is difficult.
d. FPGAs are lower-cost and consume less power than conventional ASICs or OpenFlow switching chips.
e. Programming in C is difficult.
","a,b,c","a,b","SwitchBlade, which supports the composition of pre-synthesized hardware data plane modules on an FPGA, is motivated by the following reasons:

a. Most data plane protocols involve composing only a limited number of data-plane actions: SwitchBlade leverages this characteristic of data plane protocols to enable the composition of pre-synthesized hardware data plane modules efficiently.

b. Experimental data planes may need to operate in parallel with production data planes: This motivation ensures that SwitchBlade can support the simultaneous operation of experimental and production data planes.

c. Programming in Verilog is difficult: While programming in Verilog can be challenging, it is not a direct motivation for SwitchBlade.

d. FPGAs are lower-cost and consume less power than conventional ASICs or OpenFlow switching chips: While this is a general advantage of FPGAs, it is not a specific motivation for SwitchBlade.

e. Programming in C is difficult: Programming in C is not directly related to the motivations for SwitchBlade.",[],0,10_programmable_data_planes,0.9,0.996486981439625,,Wrong Facts/Concept,Incorrect information/concept,,,0,,,,1,1,0,,3,4,3,4,0.6
