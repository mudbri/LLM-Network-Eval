Question Number,Question Text,Choices,Valid Question?,Correct Answer,LLM Answer,Correct Explanation,LLM Explanation,URLs,Correct?,Topic,LLM Confidence,logprob Confidence,Score-right-minus-wrong
113,"Which are reasonable approaches for designing a fast, scalable, programmable data plane? Select all that apply.","a. Make software routers faster by amortizing packet-processing costs across batches of packets.
b. Make software routers faster by reducing the need to copy packets from the kernel into user space.
c. Make software routers faster by distributing software routers across clusters.
d. Make hardware routers more programmable with custom OpenFlow chips.
e. Send all traffic through software switches running in user space.
",,"a,b,c,d","a,b,d",,"a. Amortizing packet-processing costs across batches of packets can improve efficiency and speed in the data plane design. This approach helps reduce per-packet processing overhead by processing packets in groups rather than individually. It enhances performance by optimizing resource utilization.
b. Reducing the need to copy packets from the kernel into user space can significantly improve the speed of software routers. Minimizing data movement between kernel and user space reduces latency and enhances overall performance.
d. Making hardware routers more programmable with custom OpenFlow chips enables greater flexibility and programmability in the data plane. Customized hardware can accelerate packet processing and support advanced features, enhancing scalability and performance.","['https://www.sciencedirect.com/science/article/pii/S2352864817300717', 'https://ieeexplore.ieee.org/document/7958560']",0,10_programmable_data_planes,0.9,0.7053638556686724,0.6000000000000001
114,What are functions that are commonly performed by a programmable data plane? Select all that apply.,"a. Computing routes
b. Shaping traffic
c. Forwarding
d. Specifying access control policies
e. Performing deep packet inspection
",,"b,c,e","b,c,e",,"a. Computing routes is typically a control-plane function, not a data-plane function. It involves determining the best path for packets to take through the network based on various metrics and constraints. This is usually done by the control plane and then programmed into the data plane devices. 
b. Shaping traffic is a function commonly performed by a programmable data plane. It involves controlling the rate of data transmission to ensure that network resources are used efficiently and fairly. 
c. Forwarding packets is a fundamental function of the data plane. It involves the actual movement of packets from an input port to an output port based on forwarding tables and rules programmed into the data plane devices. 
d. Specifying access control policies is typically a control-plane function. It involves defining rules and policies that determine which packets are allowed to pass through a network device and which are dropped. 
e. Performing deep packet inspection is usually a control-plane function. It involves analyzing the contents of packets at a granular level to make decisions about how to handle them.","['https://www.sciencedirect.com/topics/computer-science/data-plane', 'https://www.sciencedirect.com/topics/computer-science/control-plane']",1,10_programmable_data_planes,0.9,0.9923517191881936,1.0
115,Which of the following functions might be performed by a Click element? Select all that apply.,"a. Dropping packets
b. Reading a packet from a network device
c. Computing shortest paths routes between two routers
d. Counting packets
e. Classifying packets into different priority queues
",,"a,b,d,e","a,b,d,e",,a. Click elements can be configured to drop packets as part of their processing logic. This is a common function in packet processing pipelines. b. Click elements can read packets from network devices as they are designed to handle packet processing tasks. d. Click elements can be programmed to count packets for various purposes like monitoring network traffic. e. Click elements can classify packets into different priority queues based on defined rules or policies.,"['https://dl.acm.org/doi/10.1145/956993.956995', 'https://www.usenix.org/legacy/event/usenix03/tech/freenix/full_papers/mahajan/mahajan.pdf']",1,10_programmable_data_planes,0.95,0.949886561317712,1.0
116,Which of the following are true about programmable data planes in Click? Select all that apply.,"a. Click configuration is a simplified version of Python.
b. Click elements can be composed to perform complex functions, such as the forwarding at an IP router.
c. Data-plane processing in Click is limited to a fixed set of elements provided by the software.
d. Click elements can be composed to perform complex network-wide functions, such as shortest paths or BGP routing.
e. Click elements cannot perform common data plane operations such as TTL decrement or checksum computations.
",,b,"b,d",,"a. Click configuration is not based on Python; it has its own language for configuration. Python is not directly related to Click configuration.
b. Click allows composing elements to perform complex functions like forwarding at an IP router, making it a programmable data plane.
c. Data-plane processing in Click is not limited to a fixed set of elements; it allows flexibility in composing elements for various functions.
d. Click elements can indeed be composed to perform complex network-wide functions like computing shortest paths or BGP routing, showcasing the programmability of the data plane.
e. Click elements can perform common data plane operations like TTL decrement or checksum computations, so this statement is false.
Therefore, the correct answers are options b and d, as they correctly describe the capabilities of programmable data planes in Click.","['https://dl.acm.org/doi/10.1145/956993.956994', 'https://www.usenix.org/legacy/event/nsdi05/tech/full_papers/mckeown/mckeown.pdf']",0,10_programmable_data_planes,0.9,0.9998185588724328,0.6000000000000001
117,Why does a RouteBricks server assign one core per queue?,"a. Cores have heterogeneous performance, and packets are different sizes, so it makes sense to assign less powerful cores to queues that have smaller packets.
b. Having multiple cores accessing the same queue might create the possibility that there is a queue that is not served by any cores.
c. Having multiple cores accessing the same queue would require each core to perform only one function in the packet processing pipeline, which is inefficient.
d. Having multiple cores accessing the same queue would require locking to prevent concurrent memory accesses, slowing packet forwarding performance.
",,d,d,,"Having multiple cores accessing the same queue would require locking to prevent concurrent memory accesses, which can slow down packet forwarding performance. By assigning one core per queue, RouteBricks avoids the need for locking and ensures efficient packet processing without the overhead of synchronization mechanisms.",['https://www.usenix.org/legacy/event/nsdi10/tech/full_papers/agarwal.pdf'],1,10_programmable_data_planes,0.9,0.9999770387506136,1.0
118,What are some tricks commonly employed in software to accelerate packet forwarding? Select all that apply.,"a. Batch processing
b. Large packet buffers that hold multiple packets that can be read with a single read
c. Ethernet GRE tunnels
d. Forwarding smaller packets before larger packets
e. Avoiding lookups on the software bridge between virtual interfaces and physical interfaces
",,"a,b,c,e","a,b,d,e",,"a. Batch processing allows multiple packets to be processed together, improving efficiency in packet forwarding operations. This is a common trick used in software to accelerate packet forwarding. 
b. Large packet buffers that hold multiple packets can be read with a single read operation, reducing the overhead associated with reading individual packets. This is a technique employed to accelerate packet forwarding. 
d. Forwarding smaller packets before larger packets can help in reducing latency and improving overall throughput, making it a common trick used in software for faster packet forwarding. 
e. Avoiding lookups on the software bridge between virtual interfaces and physical interfaces can speed up packet forwarding by eliminating unnecessary processing steps. This is a common optimization technique in software for accelerating packet forwarding.","['https://www.sciencedirect.com/science/article/pii/S187705091501522X', 'https://www.sciencedirect.com/science/article/pii/S187705091501522X']",0,10_programmable_data_planes,0.95,0.6838141923458047,0.1999999999999999
119,What are some of the problems with current OpenFlow hardware that motivated a custom OpenFlow chip design? Select all that apply.,"a. Current hardware cannot forward traffic at line rates.
b. Current hardware is difficult to repurpose in the field.
c. Current hardware cannot support OpenFlow 1.0 match-action primitives.
d. Current hardware makes it difficult to implement multiple match action stages, and to repurpose TCAM and SRAM across multiple match-action stages.
e. The current OpenFlow protocol depends on the constraints of conventional switching chips.
",,"b,d,e","a,d,e",,a. Current hardware not being able to forward traffic at line rates was one of the problems that motivated a custom OpenFlow chip design to address performance issues. Custom chips can provide better performance capabilities. d. The difficulty in implementing multiple match action stages and repurposing TCAM and SRAM across those stages was a limitation in current hardware that a custom chip design aimed to overcome. e. The current OpenFlow protocol being constrained by conventional switching chips was a motivation to design custom OpenFlow chips to have more flexibility and efficiency in implementing OpenFlow functionality.,"['https://ieeexplore.ieee.org/document/6195803', 'https://www.sciencedirect.com/science/article/pii/S014036641730116X']",0,10_programmable_data_planes,0.95,0.9440524868363968,0.1999999999999999
120,"Which of the following are motivations for SwitchBlade, which supports composition of pre-synthesized hardware data plane modules on an FPGA? Select all that apply.","a. Programming in C is difficult.
b. Most data plane protocols involve composing only a limited number of data-plane actions.
c. FPGAs are lower-cost and consume less power than conventional ASICs or OpenFlow switching chips.
d. Experimental data planes may need to operate in parallel with production data planes.
e. Programming in Verilog is difficult.
",,"b,d,e","b,d",,SwitchBlade supports the composition of pre-synthesized hardware data plane modules on an FPGA to address the motivations related to the limited number of data-plane actions involved in most data plane protocols (option b) and the need for experimental data planes to operate in parallel with production data planes (option d). These motivations are key factors driving the development and use of SwitchBlade.,['https://dl.acm.org/doi/10.1145/3371934.3371963'],0,10_programmable_data_planes,0.95,0.9476352472795244,0.6000000000000001
