Question Number,Question Text,Choices,Valid Question?,Correct Answer,LLM Answer,Correct Explanation,LLM Explanation,URLs,Correct?,Topic,LLM Confidence,logprob Confidence
106,Which of the following are true about configuration verification? Select all that apply.,"a. Configuration verification can only detect errors after the configuration is installed on production routers.
b. Configuration verification cannot detect incorrect protocol behavior that may result from faulty hardware.
c. Verifying the correctness of network behavior based on configuration requires a model of protocol behavior.
d. Configuration verification requires a large-scale simulation of network protocols, complete with tests for different message orderings and timings.
e. Configuration verification cannot detect incorrect protocol behavior that may result from buggy software.
",,"b,c,e",c,,Verifying the correctness of network behavior based on configuration requires a model of protocol behavior. This statement is true as configuration verification relies on understanding the expected behavior of network protocols to confirm the correctness of the configuration.,['https://www.sciencedirect.com/topics/computer-science/configuration-verification'],0,14_verification,0.9,0.999439141639883
107,"Which of the following assertions could be verified with configuration verification (i.e., of a snapshot of router and switch configuration)? Select all that apply.","a. A route learned from one peer will not be readvertised to another peer.
b. The current settings of link weights will result in all routers being connected.
c. The configuration of route reflectors and clients ensures that any route learned from a neighboring AS will propagate to all routers in the topology.
d. There is no traffic pattern that would ever result in a stateful firewall dropping traffic.
e. Any time that an infection occurs, hosts are automatically quarantined.
",,"a,b,c","a,b,c",,"a. Verifying route advertisement between peers is a configuration verification task related to routing policies and redistribution rules. It ensures that routes are not inadvertently readvertised where they shouldn't be. 
b. Checking link weights to ensure all routers are connected is a configuration verification task that ensures the correctness of the network's topology. 
c. Verifying the configuration of route reflectors and clients to guarantee the propagation of routes from neighboring ASes to all routers is a task that can be validated through configuration verification.",[],1,14_verification,0.9,0.7770682994480937
108,Which of the following are true about data-plane verification? Select all that apply.,"a. Data-plane verification techniques such as header-space analysis typically operate on a single ""snapshot"" of data-plane state.
b. Data plane verification can only operate on the forwarding table of a single router or switch; network-wide analysis is not possible.
c. Data-plane verification may detect errors that configuration analysis can miss in the cases of buggy control-plane software.
d. Data-plane verification requires accurate modeling of network protocols, including which bits are present in which part of the packet header.
e. Header-space analysis can only provide verification/analysis for specific packets; it cannot answer questions for general parts of flowspace.
",,"a,c","a,c,d",,"a. Data-plane verification techniques, such as header-space analysis, indeed operate on a single 'snapshot' of data-plane state to verify correctness at that moment. This snapshot-based analysis is commonly used in data-plane verification processes. c. Data-plane verification can detect errors that configuration analysis might miss, especially related to issues caused by bugs in control-plane software. This is because data-plane verification focuses on the actual behavior of the network forwarding, which can differ from the intended configuration due to software bugs. d. Accurate modeling of network protocols, including the correct identification of packet header bits, is crucial for effective data-plane verification. Understanding the structure and behavior of network protocols is essential to verify the correctness of data-plane operations.","['https://ieeexplore.ieee.org/document/7786979', 'https://dl.acm.org/doi/10.1145/3387514.3405845']",0,14_verification,0.9,0.9980558612626964
109,Which of the following assertions could be verified with data plane verification? Select all that apply.,"a. The network will remain connected, given the failure of at most two links.
b. Two virtual network ""slices"" are not completely isolated: it is possible for traffic to travel from one slice to the other.
c. The configuration of the network's routing protocols will result in persistent oscillation (i.e., they will never settle on a stable set of routes).
d. The forwarding table state in the routers across the network will result in a forwarding loop.
e. The rules installed on the firewalls in the network ensure that only port 80 traffic can ever reach the web server from the rest of the Internet.
",,"b,d,e","b,e",,"b. Verifying traffic flow between virtual network slices is a data plane operation as it involves monitoring and ensuring the correct forwarding of packets within the network. This can be validated using data plane verification tools.
e. Verifying that only port 80 traffic can reach the web server from the Internet involves checking the data plane to ensure the firewall rules are correctly implemented and enforced to allow only specific traffic. This is another example of a data plane verification task.",['https://www.sciencedirect.com/science/article/pii/S2352864820301336'],0,14_verification,0.95,0.6261837163296036
110,Which of the following is true about Kinetic policies? Select all that apply.,"a. State transitions can be exogenous or endogenous.
b. Kinetic's NuSMV verifier can verify that the data plane will never have loops.
c. State transitions can occur based on timing (e.g., a timeout).
d. The Kinetic controller can only process external events from routers and switches.
e. Pyretic's composition operators can help prevent state explosion.
",,"a,c,e","a,c,e",,"a. State transitions in Kinetic policies can indeed be exogenous (triggered by external events) or endogenous (triggered internally within the network itself). This flexibility is a key feature of Software Defined Networking (SDN) controllers like Kinetic. c. State transitions in Kinetic policies can also be based on timing events like timeouts, allowing for dynamic behavior in the network. e. Pyretic's composition operators are designed to help prevent state explosion issues that can occur when managing complex network policies, making this statement true about Pyretic, which is a language that can be used with Kinetic controllers.","['https://dl.acm.org/doi/10.1145/3152434.3152441', 'https://dl.acm.org/doi/10.1145/2208910.2208929']",1,14_verification,0.9,0.9654022867603089
112,"Which of the following NuSMV expressions encodes the statement ""It is always possible for the policy state to go to 'allow'.""","a. SPEC AG (!authenticated -> AX policy=allow)
b. None of the above.
c. SPEC A [ policy=allow U authenticated ]
d. SPEC AG (authenticated -> AX policy=allow)
e. SPEC AG (EF policy=allow)
",,e,d,,Option d specifies the expression 'It is always possible for the policy state to go to 'allow' as it uses the AG (Always Globally) operator to check if 'authenticated' leads to 'policy=allow' in the next state transition.,[],0,14_verification,0.9,0.9999325777929792
