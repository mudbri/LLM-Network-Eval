Question Number,Question Text,Choices,Valid Question?,Correct Answer,LLM Answer,Correct Explanation,LLM Explanation,URLs,Correct?,Topic,LLM Confidence,logprob Confidence
95,What are some benefits to using a layer-2 MAC topology for an entire data center? Select all that apply.,"a. Host configuration is simpler, since all hosts are visible from a single large Ethernet topology.
b. Forwarding on physical MAC addresses is simpler, since both the data center network topology and hosts' physical MAC addresses are hierarchical.
c. IP routing does not need to be reconfigured when physical or virtual machines move from one part of the network to another.
d. Scaling problems are simpler, since all hosts are configured on a single, flat topology.
e. Load balancing is easier on a layer-2 topology than on a layer 3 topology.
",,"a,c","a,c",,"a: True — a single Layer‑2 topology makes hosts visible on the same Ethernet domain (ARP resolution, no gateway changes), simplifying host configuration and some management tasks. c: True — because hosts keep their IP/MAC adjacency at L2, IP routing does not need to be reconfigured when a VM or host moves within the same L2 domain (no IP renumbering or routing updates). b: False — physical MAC addresses are flat (not hierarchical), so forwarding is not intrinsically simpler for L2; hierarchical forwarding is a feature of L3 designs. d: False — a single flat L2 domain introduces scaling issues (broadcast traffic, CAM/forwarding-table limits) rather than simplifying them. e: False — traditional L2 (STP-based) tends to block links and make efficient multipath/load balancing harder; modern fabrics add protocols to mitigate this, but L3/ECMP designs generally enable easier, scalable load balancing.","['https://kb.vmware.com/s/article/1003212', 'https://www.arista.com/en/solutions/data-center-leaf-spine', 'https://www.cisco.com/c/en/us/td/docs/solutions/Enterprise/Data_Center/DC_Infra3_0/DCInfra_WhitePaper.html']",1,13_SDN_use_cases,0.92,1
96,"In PortLand, what are the reasons for assigning hosts pseudo-MAC addresses, as opposed to simply forwarding traffic on physical MAC addresses? Select all that apply.","a. Hosts in the data-center network topology are more vulnerable to attack if they expose their actual physical MAC addresses, rather than having a layer of indirection.
b. It is very difficult to load balance traffic using physical MAC addresses; pseudo MAC addresses make it possible to assign traffic to destination IP addresses.
c. Without pseudo-MAC addresses, switches would have to update forwarding state whenever hosts with a particular MAC address moved from one portion of the topology to another.
d. Forwarding loops are be more common in a flat layer-2 topology than they are in a topology with hierarchical pseudo MAC addresses.
e. In a flat layer-2 topology, switches cannot know on which port to forward traffic without maintaining switch tables for each MAC address, since MAC addresses are flat, not hierarchical.
",,"c,e","c,e",,"PortLand assigns hosts pseudo-MACs so that addresses become location-dependent/hierarchical locators. This (1) avoids having to update forwarding state throughout the fabric when a host moves — only the mapping service (or edge) needs to change rather than many switches (reason c); and (2) lets switches forward based on locator prefixes (hierarchical bits) instead of keeping large flat per-host MAC tables, improving scalability in a flat L2 fabric (reason e). Options a and b are not primary PortLand motivations, and b is incorrect in its wording. Option d is not a primary stated reason — PortLand’s pseudo-MACs are about scalability and mobility (and enabling simple loop-free forwarding by design), not merely to reduce the raw incidence of layer‑2 loops compared to flat L2.","['https://conferences.sigcomm.org/sigcomm/2009/papers/p360-kandula.pdf (PortLand paper)', 'https://www.usenix.org/legacy/events/nsdi09/tech/full_papers/greenberg.pdf (VL2 paper — for context on DC addressing/scale)']",1,13_SDN_use_cases,0.86,1
97,What are the steps involved in the Proxy ARP process that PortLand's Fabric Manager runs?,"a. Host sends ARP query, edge switch intercepts query and redirects to the fabric manager, fabric manager consults PMAC mapping table and returns returns PMAC directly to the end host.
b. Edge switch sends ARP query to fabric manager, fabric manager consults PMAC mapping table and returns PMAC to edge switch, edge switch updates its local PMAC mapping table.
c. Host sends ARP query, fabric manager intercepts ARP query, consults PMAC mapping table and returns PMAC to end host.
d. Host sends ARP query, edge switch intercepts query, consults PMAC mapping table and returns PMAC to the host.
e. Host sends ARP query, edge switch intercepts query and redirects to the fabric manager, fabric manager consults PMAC mapping table and returns PMAC to edge switch, edge switch returns PMAC to end host.
",,e,e,,"PortLand uses a Fabric Manager (FM) to answer ARPs on behalf of remote hosts. When a host issues an ARP, the edge (access) switch intercepts that ARP and forwards/redirects it to the Fabric Manager. The FM looks up the destination’s PMAC in its mapping table and returns the PMAC to the edge switch. The edge switch then replies to the host with that PMAC (proxy ARP) and may cache the mapping locally. Choice (e) describes this end-to-end sequence correctly.","['https://www.microsoft.com/en-us/research/publication/portland-a-scalable-fault-tolerant-layer-2-data-center-network-fabric/', 'https://www.usenix.org/system/files/conference/nsdi10/nsdi10-final-5.pdf']",1,13_SDN_use_cases,0.9,1
98,"What are some of the disadvantages of today's interdomain routing protocol, BGP? Select all that apply.","a. ISPs cannot load-balance traffic across multiple routes to the same destination IP prefix.
b. Routing and forwarding decisions are only based on IP prefix, not on a broader range of traffic flow attributes.
c. ISPs can only influence route selection through indirect mechanisms (e.g., prepending), rather than directly manipulating the forwarding table entries in switches.
d. ISPs cannot express preference of one route over another, given multiple routes to a destination.
e. ISPs can only influence the routing decisions of their immediate neighbor, not the entire end-to-end path.
",,"b,c,e","a,b,c,e",,"a: Historically BGP selects a single best path per prefix and does not provide native, fine‑grained multipath load‑balancing across different AS paths (vendors add limited multipath/ECMP features, but it’s not a general interdomain capability). b: BGP makes routing/forwarding decisions based on IP prefixes and route/path attributes (local‑pref, AS‑path, MED, communities); it does not natively consider richer flow/application attributes. c: ISPs influence remote forwarding via policy attributes (prepends, local‑pref, MED, communities) rather than directly writing forwarding entries in other ASes’ routers — i.e., indirect policy manipulation rather than direct control. e: An ISP can directly control what it advertises to its neighbors but cannot unilaterally enforce end‑to‑end routing in other ASes; influence beyond immediate neighbors is indirect and depends on other ASes’ policies. d is false because BGP explicitly provides mechanisms (local‑pref, MED, communities, AS‑path) for expressing route preference.","['https://tools.ietf.org/html/rfc4271', 'https://www.internetsociety.org/tutorials/bgp/', 'https://www.cisco.com/c/en/us/td/docs/ios-xml/ios/iproute_bgp/command/bgb-cr-book/bgb-bestpath.html', 'https://www.juniper.net/documentation/en_US/junos/topics/concept/bgp-multipath-overview.html', 'https://dl.acm.org/doi/10.1145/2534169.2534175']",0,13_SDN_use_cases,0.88,1
101,What are some of the features that an SDX enables that today's IXPs cannot support? Select all that apply.,"a. Application of different business relationships across different regions of the world (e.g., peering only in a specific geographic region).
b. Application-specific peering
c. Wide-area load balancing using DNS-based redirection
d. On-the-fly redirection to middleboxes
e. Wide-area load balancing using IP packet rewriting
",,"b,d,e","a,b,d,e",,"SDX (Software‑Defined Internet eXchange) introduces fine‑grained, flow‑level and policy‑driven exchange capabilities that traditional IXPs (largely L2 fabrics with BGP route servers) do not provide. Specifically:
- a: SDX can enforce selective peering/business relationships at a more granular scope (per policy, application or region) rather than the coarse, location‑bound arrangements used by today’s IXPs. Traditional IXPs are regional L2 fabrics and lack centralized programmable policy that ties peering decisions to arbitrary geographic/application scopes. 
- b: SDX enables application‑specific peering by matching and steering traffic based on application/flow attributes (e.g., HTTP vs. video) — something conventional IXPs do not support, since they exchange routes/prefixes, not per‑application flows. 
- d: SDX can perform on‑the‑fly redirection/steering of flows to middleboxes (firewalls, caches, NATs) using SDN rules and centralized control; legacy IXPs cannot dynamically steer individual flows through arbitrary middleboxes. 
- e: SDX enables wide‑area load balancing via packet/flow rewriting or header rewriting at the exchange (or controlling next‑hop decisions per flow) to distribute traffic across multiple paths/providers; traditional IXPs lack the programmable data‑plane to do flow‑level IP rewriting for global load balancing. 
Choice c (DNS‑based redirection) is not unique to SDX and is already widely used by CDNs and multi‑homed services; it’s an application‑layer technique rather than a capability that SDX uniquely provides at the exchange fabric.
","['https://en.wikipedia.org/wiki/Internet_exchange_point', 'https://opennetworking.org/wp-content/uploads/2013/04/what-is-sdn.pdf (Open Networking Foundation: SDN definition and capabilities)', 'https://www.etsi.org/technologies/nfv (ETSI NFV: middleboxes / service chaining concepts)', 'https://conferences.sigcomm.org/ (see literature on SDX / Software‑Defined IXPs — SDX research papers describe application‑specific peering, flow steering, and packet rewriting capabilities)']",0,13_SDN_use_cases,0.8,1
103,What are some of the motivations for applying software defined networking in home networks? Select all that apply.,"a. Better performance, since control decisions can be made from a well-provisioned server, as opposed to an under-provisioned router.
b. Ability to better user interfaces to control home network behavior, independent of the interfaces that ship with home router devices.
c. Ability to allow multiple service providers access to the home network infrastructure for different applications and services.
d. Outsourcing control and management of the home network to a third party.
e. More fine-grained control over the forwarding behavior of individual devices as conditions in the network change (e.g., a device uses too much bandwidth or data).
",,"b,c,d,e","a,b,c,d,e",,"All five choices are valid motivations for bringing SDN into home networks: a) Centralized controllers on better‑provisioned servers can run more sophisticated control/optimization algorithms than a constrained home router, potentially improving end‑to‑end performance. b) SDN exposes programmatic APIs and an application layer, enabling richer, vendor‑independent user interfaces for controlling home networking behavior. c) SDN’s programmability and logical separation of control allows multiple service providers or ‘slices’ to be given controlled access to the same home infrastructure for different services. d) A centralized controller can be hosted off‑site (by an ISP or third party), enabling outsourcing of control and management of home gateways and policies. e) SDN supports fine‑grained, dynamic flow‑level forwarding policies so forwarding for individual devices can be adjusted on the fly (e.g., rate‑limit or reroute a misbehaving device).","['https://opennetworking.org/wp-content/uploads/2013/04/SDN-Architecture-White-Paper.pdf', 'https://arxiv.org/abs/1406.0440 (Kreutz et al., ""Software-Defined Networking: A Comprehensive Survey"")', 'https://datatracker.ietf.org/wg/homenet/about/ (IETF Homenet working group)']",0,13_SDN_use_cases,0.9,1
104,"Suppose that an operator of a home network wants to write the following policy:
1. Block all traffic to Facebook from my child's computer.
2. Rate limit BitTorrent traffic from my child's computer if the VoIP client on my desktop is active.
Which of the following most closely approximates the policy?  Assume that ""facebook"" represents Facebook IP addresses, that ""bittorrent"" represents BitTorrent ports, and that ""limitifVOIP"" is a dynamic policy that checks a Resonance-like state machine to determine whether VOIP traffic has recently been observed.","a. (match(srcip=child, dstip=facebook) + drop) + (match(srcip=child, dstport=bittorrent) + dynamic(limitIfVOIP))
b. (match(srcip=child, dstip=facebook) >> drop) >> (match(srcip=child, dstport=bittorrent) >> dynamic(limitIfVOIP))
c. (match(srcip=child, dstip=facebook) >> drop) + (match(srcip=child, dstport=bittorrent) >> dynamic(limitIfVOIP))
d. (match(srcip=child, dstip=facebook) + drop) >> (match(srcip=child, dstport=bittorrent) + dynamic(limitIfVOIP))
",,c,c,,"In this policy language + denotes parallel/union of independent policies and >> denotes sequential composition (match then action). The desired semantics are two independent rules: 1) match child->facebook then drop, and 2) match child bittorrent then apply the dynamic rate-limit. Option (c) expresses exactly that: (match(...) >> drop) + (match(...) >> dynamic(limitIfVOIP)). The other choices either use + where sequential composition is needed (a, d) or chain the two policies sequentially so the second would only run after the first (b), which is not the intended independent-policy semantics.","['https://arxiv.org/abs/1404.3315 (NetKAT: Semantic Foundations for Networks)', 'https://frenetic-lang.github.io/pyretic/ (Pyretic language manual; shows >> for sequential composition and + for parallel composition)', 'https://www.cs.princeton.edu/~jrex/papers/frenetic-nsdi11.pdf (Frenetic: a network programming language — background on compositional operators)']",1,13_SDN_use_cases,0.9,1
