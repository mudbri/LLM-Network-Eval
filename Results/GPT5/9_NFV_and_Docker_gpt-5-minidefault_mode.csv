Question Number,Question Text,Choices,Valid Question?,Correct Answer,LLM Answer,Correct Explanation,LLM Explanation,URLs,Correct?,Topic,LLM Confidence,logprob Confidence
72,"In NFV, which of the following is the function of steering?","a. Finding the best location to place a single network function in an enterprise or wide area network.
b. Installing custom packet processing code on servers in the network.
c. Placing middleboxes at places throughout the network to minimize network load.
d. Installing custom packet processing code on switches in the network.
e. Installing flow table entries in switches to forward traffic through network functions or middleboxes that are installed in the network
",,e,e,,"In NFV, 'steering' means directing/forwarding traffic through a sequence of network functions (middleboxes or VNFs) by programming the network’s forwarding elements (e.g., installing flow-table entries in switches) so flows traverse the required functions (service chaining). The other choices describe placement or implementation of function code, not the act of steering/forwarding traffic through VNFs.","['https://www.etsi.org/deliver/etsi_gs/NFV/001_099/002/01.02.01_60/gs_nfv002v010201p.pdf (ETSI NFV Architectural Framework)', 'https://datatracker.ietf.org/wg/sfc/about/ (IETF Service Function Chaining WG overview)', 'https://en.wikipedia.org/wiki/Network_functions_virtualization (Network Functions Virtualization - Wikipedia)']",1,9_NFV_and_Docker,0.92,1
74,What are some advantages of Docker containers over virtual machines? Select all that apply.,"a. Containers can be connected to build a virtual network, whereas virtual machines cannot.
b. Performance in containers may be better since they invoke OS system calls directly, rather than through an emulated machine.
c. Containers require less storage and memory per-instance, and require less time to instantiate than virtual machines.
d. Containers provide more flexibility in the choice of operating system.
e. Containers provide better isolation than virtual machines.
",,"b,c","b,c",,"b: True — containers share the host kernel so application syscalls go to the host OS directly (no guest OS syscall emulation), reducing virtualization overhead and improving performance. c: True — containers are lightweight (share image layers and the host kernel), so they use less per-instance storage and memory and start much faster than full virtual machines. a,d,e are incorrect: a is false because virtual machines can also be interconnected via virtual networking provided by hypervisors; d is false because containers require the host kernel type (e.g., Linux containers need a Linux kernel), so VMs actually offer more freedom to run different OSes; e is false because VMs generally provide stronger isolation (separate kernels/hardware virtualization) than containers, which share the host kernel.","['https://www.docker.com/resources/what-container', 'https://www.redhat.com/en/topics/containers/containers-vs-virtual-machines', 'https://www.ibm.com/cloud/learn/containers-vs-virtual-machines']",1,9_NFV_and_Docker,0.95,1
75,Which of the following commands is used to instantiate a new Docker container by invoking a command in that container?,"a. docker stop
b. docker attach
c. docker commit
d. docker pull
e. docker run
",,e,e,,"docker run instantiates (creates) and starts a new container from a specified image and can invoke a command inside that new container. The other commands do not create a new container: docker stop stops a running container, docker attach connects to an already-running container's stdio, docker commit creates an image from a container’s filesystem changes, and docker pull downloads an image from a registry.","['https://docs.docker.com/engine/reference/commandline/run/', 'https://docs.docker.com/engine/reference/commandline/stop/', 'https://docs.docker.com/engine/reference/commandline/attach/', 'https://docs.docker.com/engine/reference/commandline/commit/', 'https://docs.docker.com/engine/reference/commandline/pull/']",1,9_NFV_and_Docker,0.99,1
76,Which of the following is true about networking Docker containers? Select all that apply.,"a. Docker containers can be networked to each other via the native Docker bridge or Open vSwitch.
b. A Docker container can never expose a low port (e.g., port 80) to the external Internet; Internet hosts must always reach a Docker service by a high port (e.g., 8080).
c. Docker containers running in different virtual machines cannot be networked together.
d. Connecting Docker containers requires setting up GRE tunnels between the containers.
e. Docker containers are not reachable from the external Internet by default.
",,"a,e","a,e",,"a: True — Docker provides the native bridge network (docker0 and user-defined bridge networks) and can be integrated with external switching/forwarding solutions such as Open vSwitch for advanced networking. b: False — containers can expose low-numbered host ports (e.g., map container port 80 to host port 80) if the host permits; there is no requirement to use only high ports. c: False — containers on different VMs/hosts can be networked (overlay networks, VXLAN-based overlays, CNI plugins, Docker Swarm/Kubernetes networking, etc.). d: False — GRE tunnels are not required to connect containers; overlays may use VXLAN or other mechanisms and many setups use built-in bridge/overlay drivers without GRE. e: True — by default containers get private addresses on a bridge and are not reachable from the external Internet unless you publish/map ports, use host networking, or configure routing/firewall rules to expose them.","['https://docs.docker.com/network/', 'https://docs.docker.com/network/bridge/', 'https://docs.docker.com/config/containers/container-networking/#published-ports', 'https://docs.docker.com/network/overlay/', 'https://www.openvswitch.org/']",1,9_NFV_and_Docker,0.93,1
