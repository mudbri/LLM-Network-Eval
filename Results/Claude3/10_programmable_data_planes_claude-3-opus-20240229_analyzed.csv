Question Number,Question Text,Choices,Valid Question?,Correct Answer,LLM Answer,Correct Explanation,LLM Explanation,URLs,Correct?,Topic,LLM Confidence,logprob Confidence,QD - Goal clear?(0/1),QD - Context clear?(0/1),QD - How challenging(1-4),QD - Level learnt(1-7),SM - Description,SM - Goal understood?(0/1),SM - Context understood?(0/1),SM - Implied Context understood?(0/1),SM - Relvant facts identified?(0/1),SM - Correct facts retieved?(0/1),SM - No incorrect facts?(0/1),SM - Correct reasoning?(0/1),SM - Misunderstanding General,SM - Misunderstanding Reasons,SM - Misunderstanding General (secondary),SM - Misunderstanding Reasons (secondary),AQ - Inferrable(0-2)?,Source links work(number),Sources Types,Sources Relevant(number),Source Problems,AQ - Precise?,AQ - Explainable?,Effect - Description of effects,Effect - Conceptual error in explanaiton?(0/1),Effect - Subtopics,Effect - Error Type,Effect - Severity,Effect - Who is most effected(1-4),CD - detection student(1-3),CD - correction student(1-8),CD - detection knowledgeable(1-3),CD - correction knowledgeable(1-8),Unnamed: 46,Score-right-minus-wrong
113,"Which are reasonable approaches for designing a fast, scalable, programmable data plane? Select all that apply.","a. Make hardware routers more programmable with custom OpenFlow chips.
b. Make software routers faster by reducing the need to copy packets from the kernel into user space.
c. Send all traffic through software switches running in user space.
d. Make software routers faster by distributing software routers across clusters.
e. Make software routers faster by amortizing packet-processing costs across batches of packets.
",,"a,b,d,e","b,d,e",,Making software routers faster can be achieved through multiple approaches:b) Reducing the need to copy packets from kernel to user space avoids costly context switches and memory copies.  d) Distributing software routers across clusters allows load balancing and parallel processing of packets.e) Processing batches of packets amortizes the fixed costs of scheduling and invoking the packet-processing code.Making hardware routers more programmable with custom chips (a) or sending all traffic through user-space software (c) are less scalable approaches.,"['A. Sivaraman et al., Packet Transactions: High-Level Programming for Line-Rate Switches, SIGCOMM 2016', 'E. Kohler et al., The Click modular router, ACM Trans. Comput. Syst., Aug. 2000', 'D. Zhou et al., ScaleBricks: A High-Performance Software-Based Network Data Plane, NSDI 2022']",0,10_programmable_data_planes,0.8,1,1,1,1,5,Not knowing that making custom chips is a scalable approach,1,1,1,1,0,1,1,Wrong Facts/Concept,Incorrect information/concept,,,0,3,"research paper, research paper, research paper",2,,1,1,Not know how to make programmable data plane faster,0,P4,misinformation,Minor,1,3,3,1,1,,0.6000000000000001
114,What are functions that are commonly performed by a programmable data plane? Select all that apply.,"a. Performing deep packet inspection
b. Forwarding
c. Specifying access control policies
d. Shaping traffic
e. Computing routes
",,"a,b,d","a,b,d",,"A programmable data plane commonly performs functions like deep packet inspection to analyze packet contents, forwarding packets based on defined rules, and shaping traffic to control bandwidth usage. While access control policies and route computation are important networking functions, they are typically handled by the control plane rather than the data plane itself.","['https://www.sdxcentral.com/networking/sdn/definitions/what-is-programmable-data-plane/', 'https://www.juniper.net/documentation/us/en/software/junos/sdn/topics/concept/sdn-programmable-data-plane-overview.html']",1,10_programmable_data_planes,0.9,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1
115,Which of the following functions might be performed by a Click element? Select all that apply.,"a. Reading a packet from a network device
b. Dropping packets
c. Counting packets
d. Classifying packets into different priority queues
e. Computing shortest paths routes between two routers
",,"a,b,c,d","a,b,c,d",,"A Click element in software defined networking can perform various packet processing functions. It can read packets from a network device (a), drop packets based on defined rules (b), count packets for monitoring and statistics (c), and classify packets into different priority queues for QoS (d). However, computing shortest path routes between routers (e) is typically a control plane function performed by the SDN controller, not individual Click elements.","['https://www.sciencedirect.com/topics/computer-science/click-modular-router', 'https://dl.acm.org/doi/10.1145/383059.383071']",1,10_programmable_data_planes,0.95,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1
116,Which of the following are true about programmable data planes in Click? Select all that apply.,"a. Click elements cannot perform common data plane operations such as TTL decrement or checksum computations.
b. Data-plane processing in Click is limited to a fixed set of elements provided by the software.
c. Click elements can be composed to perform complex functions, such as the forwarding at an IP router.
d. Click configuration is a simplified version of Python.
e. Click elements can be composed to perform complex network-wide functions, such as shortest paths or BGP routing.
",,c,c,,"In Click, elements can be composed to perform complex data plane functions like the forwarding done by an IP router. Elements in Click are not limited to a fixed set provided by the software (b is incorrect), and can perform common data plane operations like TTL decrement and checksum computations (a is incorrect). Click configuration uses its own domain-specific language, not a simplified Python (d is incorrect). While elements can be composed for complex forwarding functions, Click is focused on data plane processing on a single node, not network-wide control plane functions like shortest path routing or BGP (e is incorrect).","['Kohler, Eddie, et al. ""The click modular router."" ACM Transactions on Computer Systems (TOCS) 18.3 (2000): 263-297.', 'https://github.com/kohler/click']",1,10_programmable_data_planes,0.95,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1
117,Why does a RouteBricks server assign one core per queue?,"a. Having multiple cores accessing the same queue would require each core to perform only one function in the packet processing pipeline, which is inefficient.
b. Having multiple cores accessing the same queue would require locking to prevent concurrent memory accesses, slowing packet forwarding performance.
c. Having multiple cores accessing the same queue might create the possibility that there is a queue that is not served by any cores.
d. Cores have heterogeneous performance, and packets are different sizes, so it makes sense to assign less powerful cores to queues that have smaller packets.
",,b,b,,"The correct answer is b. Having multiple cores accessing the same queue would require locking mechanisms to prevent concurrent access to the shared memory of the queue. This locking overhead would slow down the packet forwarding performance, as cores would need to wait to acquire locks before processing packets from the queue. By assigning one core per queue, RouteBricks avoids the need for locking and allows each core to process packets from its dedicated queue independently, maximizing performance.","['RouteBricks: Exploiting Parallelism to Scale Software Routers, Dobrescu et al., SOSP 2009', 'https://www.cs.princeton.edu/courses/archive/fall13/cos597E/papers/routebricks09.pdf']",1,10_programmable_data_planes,0.95,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1
118,What are some tricks commonly employed in software to accelerate packet forwarding? Select all that apply.,"a. Ethernet GRE tunnels
b. Large packet buffers that hold multiple packets that can be read with a single read
c. Forwarding smaller packets before larger packets
d. Avoiding lookups on the software bridge between virtual interfaces and physical interfaces
e. Batch processing
",,"a,b,d,e","b,e",,"Two common tricks used in software to accelerate packet forwarding are:b) Using large packet buffers that can hold multiple packets. This allows multiple packets to be read with a single read operation, reducing the overhead of multiple reads.  e) Batch processing packets. By processing a batch of packets together, various optimizations can be made to improve throughput compared to processing each packet individually.","['Computer Networking: A Top-Down Approach, 7th Edition by Kurose and Ross, Section 4.4 on Switching', 'High-Performance Packet Processing on Commodity Hardware, Gallenm√ºller et al., IEEE Communications Surveys & Tutorials, 2020']",0,10_programmable_data_planes,0.9,1,1,1,2,3,Does not know that b and d are also true,1,1,1,0,1,1,1,Wrong Facts/Concept,Incorrect information/concept,,,0,2,"research paper, book",2,,1,0,Not understand ways to accelerate packet forwarding,0,Ethernet GRE,misinformation,Minor,1,3,3,3,3,,0.1999999999999999
119,What are some of the problems with current OpenFlow hardware that motivated a custom OpenFlow chip design? Select all that apply.,"a. Current hardware makes it difficult to implement multiple match action stages, and to repurpose TCAM and SRAM across multiple match-action stages.
b. Current hardware cannot forward traffic at line rates.
c. The current OpenFlow protocol depends on the constraints of conventional switching chips.
d. Current hardware cannot support OpenFlow 1.0 match-action primitives.
e. Current hardware is difficult to repurpose in the field.",,"a,c,e","a,c,e",,"The problems with current OpenFlow hardware that motivated a custom chip design include: a) difficulty implementing multiple match-action stages and repurposing TCAM/SRAM across them, c) the OpenFlow protocol being constrained by conventional switching chip limitations, and e) difficulty repurposing the hardware in the field. Current hardware can generally forward traffic at line rates (b) and does support OpenFlow 1.0 match-action primitives (d).","[""McKeown et al., 'OpenFlow: Enabling Innovation in Campus Networks', ACM SIGCOMM Computer Communication Review, 2008"", ""Bosshart et al., 'Forwarding Metamorphosis: Fast Programmable Match-Action Processing in Hardware for SDN', ACM SIGCOMM, 2013""]",1,10_programmable_data_planes,0.9,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1
120,"Which of the following are motivations for SwitchBlade, which supports composition of pre-synthesized hardware data plane modules on an FPGA? Select all that apply.","a. Most data plane protocols involve composing only a limited number of data-plane actions.
b. Experimental data planes may need to operate in parallel with production data planes.
c. Programming in Verilog is difficult.
d. FPGAs are lower-cost and consume less power than conventional ASICs or OpenFlow switching chips.
e. Programming in C is difficult.
",,"a,b,c","a,b",,"SwitchBlade is motivated by the observations that (a) most data plane protocols involve composing only a limited number of data-plane actions, and (b) experimental data planes may need to operate in parallel with production data planes on the same switch. By pre-synthesizing common data plane modules on an FPGA and allowing them to be composed, SwitchBlade aims to simplify the development of custom data planes while enabling parallel operation with production forwarding.","['SwitchBlade: A Platform for Rapid Deployment of Network Protocols on Programmable Hardware, Anwer et al., SIGCOMM 2010', 'https://www.cs.princeton.edu/~jrex/papers/switchblade10.pdf']",0,10_programmable_data_planes,0.9,1,1,1,1,5,The fact that programming in verilog is also difficult direct motivation. Missing facts,1,1,1,1,0,1,1,Wrong Facts/Concept,Incorrect information/concept,,,0,1,research paper,1,,1,1,Not know the reasons behind SwitchBlade,0,SwitchBlade,misinformation,Minor,1,3,4,3,4,,0.6000000000000001
